---
# Simplified Partner PowerUp BizObs App - EC2 Deployment Tasks
# Optimized for the actual requirements of your self-contained Node.js app
# Your app handles most deployment logic internally via its own scripts

# Install system dependencies (your app needs Node.js, npm, git)
- name: Install Node.js, npm, and git
  become: true
  apt:
    name: ['nodejs', 'npm', 'git', 'curl']
    state: present
    update_cache: yes
  retries: 3
  delay: 5

# Verify Node.js version (your app requires Node.js 18+)
- name: Check Node.js version
  command: node --version
  register: node_version
  changed_when: false

- name: Display Node.js version
  debug:
    msg: "Node.js version: {{ node_version.stdout }}"

# Create app directory with proper permissions
- name: Create BizObs directory
  become: true
  file:
    path: "{{ bizobs_home | default('/home/dt_training/bizobs-app') }}"
    state: directory
    owner: "{{ bizobs_user | default('dt_training') }}"
    group: "{{ bizobs_user | default('dt_training') }}"
    mode: '0755'

# Clone your well-structured app from GitHub
- name: Clone Partner PowerUp BizObs App from GitHub
  git:
    repo: "https://github.com/lawrobar90/Partner-PowerUp-BizObs-App.git"
    dest: "{{ bizobs_home | default('/home/dt_training/bizobs-app') }}"
    version: "{{ bizobs_git_branch | default('main') }}"
    force: yes
  become: true
  become_user: "{{ bizobs_user | default('dt_training') }}"

# Your app has clean dependencies - standard npm install works
- name: Install Node.js dependencies
  command: npm install --production
  args:
    chdir: "{{ bizobs_home | default('/home/dt_training/bizobs-app') }}"
  become: true
  become_user: "{{ bizobs_user | default('dt_training') }}"

# Your app includes its own systemd service setup
- name: Make setup script executable
  become: true
  file:
    path: "{{ bizobs_home | default('/home/dt_training/bizobs-app') }}/scripts/setup-autostart.sh"
    mode: '0755'

- name: Run app's autostart setup script
  become: true
  command: "{{ bizobs_home | default('/home/dt_training/bizobs-app') }}/scripts/setup-autostart.sh"
  args:
    chdir: "{{ bizobs_home | default('/home/dt_training/bizobs-app') }}"

# Start the service (your app's script creates the systemd service)
- name: Start and enable BizObs service
  become: true
  systemd:
    name: bizobs
    enabled: yes
    state: started
    daemon_reload: yes

# Wait for your app to be ready (it has built-in health checks)
- name: Wait for BizObs application to start
  wait_for:
    host: "127.0.0.1"
    port: "{{ bizobs_port | default(8080) }}"
    delay: 10
    timeout: 120

# Test your app's health endpoint
- name: Test BizObs health endpoint
  uri:
    url: "http://127.0.0.1:{{ bizobs_port | default(8080) }}/api/health"
    method: GET
    status_code: 200
  register: bizobs_health_check
  retries: 5
  delay: 3

- name: Display health check result
  debug:
    msg: "BizObs health check: {{ bizobs_health_check.json | default('OK') }}"

# Create Kubernetes service for external access (ACE-BOX pattern)
- name: Create Kubernetes service for BizObs
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: bizobs-service
        namespace: default
        labels:
          app: bizobs
          component: partner-powerup
      spec:
        type: ExternalName
        externalName: "{{ ansible_default_ipv4.address | default('127.0.0.1') }}"
        ports:
        - protocol: TCP
          port: "{{ bizobs_port | default(8080) }}"
          targetPort: "{{ bizobs_port | default(8080) }}"
          name: http
    state: present
  failed_when: false

# Create Kubernetes ingress for external access
- name: Create Kubernetes ingress for BizObs external access
  kubernetes.core.k8s:
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: bizobs-ingress
        namespace: default
        labels:
          app: bizobs
          component: partner-powerup
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
      spec:
        rules:
        - host: "{{ bizobs_domain | default('bizobs.' + ingress_domain) }}"
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: bizobs-service
                  port:
                    number: "{{ bizobs_port | default(8080) }}"
    state: present
  failed_when: false

# Final validation
- name: Validate BizObs deployment
  uri:
    url: "http://127.0.0.1:{{ bizobs_port | default(8080) }}/api/admin/services/status"
    method: GET
    status_code: 200
  register: bizobs_admin_check
  retries: 3
  delay: 5
  failed_when: false

- name: Display deployment status
  debug:
    msg: |
      ðŸŽ‰ Partner PowerUp BizObs deployment complete!
      
      ðŸ”— Application Access:
      - Local: http://127.0.0.1:{{ bizobs_port | default(8080) }}
      - External: {{ ingress_protocol | default('http') }}://{{ bizobs_domain | default('bizobs.' + ingress_domain) }}
      - Health: http://127.0.0.1:{{ bizobs_port | default(8080) }}/api/health
      - Admin: http://127.0.0.1:{{ bizobs_port | default(8080) }}/api/admin/services/status
      
      ðŸŽ­ Features Ready:
      - Customer Journey Simulation
      - Multi-persona Load Generation  
      - Dynatrace Integration
      - Real-time Service Mesh
      - Business Observability Dashboard
