#
# Partner PowerUp BizObs - Clean ACE-BOX Role
#

---
- debug:
    msg: " Partner PowerUp BizObs - ACE-BOX deployment"

- set_fact:
    bizobs_repo_url: "https://github.com/lawrobar90/Partner-PowerUp-BizObs-App.git"
    bizobs_app_dir: "/home/{{ ace_box_user | default('dt_training') }}/Partner-PowerUp-BizObs-App"
    bizobs_domain: "bizobs.{{ ingress_domain }}"

- include_role:
    name: dt-access-token
  vars:
    access_token_var_name: "monaco_cleanup_api_token"
    access_token_scope: ["ReadConfig", "WriteConfig", "events.ingest", "settings.read", "settings.write", "metrics.ingest", "openTelemetryTrace.ingest", "logs.ingest"]

- include_role:
    name: "microk8s"

# Use ACE-BOX nodejs role - YARN failure is acceptable since we only need npm
- name: Install Node.js via ACE-BOX role
  block:
    - include_role:
        name: "nodejs"
      vars:
        nodejs_node_version: "v18.20.1"
  rescue:
    - name: Verify Node.js is available despite YARN failure
      ansible.builtin.shell: |
        source ~/.nvm/nvm.sh && node --version
      become_user: "{{ ace_box_user | default('dt_training') }}"
      register: node_version_result
      
    - debug:
        msg: "Node.js available: {{ node_version_result.stdout }} (YARN installation failed but not required)"

# Install OneAgent BEFORE app for proper instrumentation
- include_role:
    name: "dt-oneagent-classic"

# Deploy Monaco configuration BEFORE app starts
- include_role:
    name: "monaco-v2"

- name: Deploy Monaco configuration for BizObs
  include_role:
    name: monaco-v2
    tasks_from: apply-monaco
    apply:
      environment:
        DT_API_TOKEN: "{{ dynatrace_api_token }}"
        DT_PLATFORM_TENANT_URL: "{{ extra_vars.dt_environment_url_gen3.rstrip('/') if extra_vars.dt_environment_url_gen3 is defined else '' }}"
        DT_OAUTH_CLIENT_ID: "{{ extra_vars.dt_oauth_client_id | default('') }}"
        DT_OAUTH_CLIENT_SECRET: "{{ extra_vars.dt_oauth_client_secret | default('') }}"
        DT_OAUTH_SSO_ENDPOINT: "{{ extra_vars.dt_oauth_sso_endpoint | default('') }}"
        INGRESS_DOMAIN: "{{ ingress_domain }}"
  vars:
    monaco_projects_root: "{{ role_path }}/files/monaco"
    monaco_project: ""
    monaco_manifest_path: "{{ role_path }}/files/monaco/manifest.yml"

- name: Clone repository
  ansible.builtin.git:
    repo: "{{ bizobs_repo_url }}"
    dest: "{{ bizobs_app_dir }}"
    version: "main"
    force: yes
  become_user: "{{ ace_box_user | default('dt_training') }}"

- name: Install dependencies
  ansible.builtin.command:
    cmd: npm install --production
    chdir: "{{ bizobs_app_dir }}"
  become_user: "{{ ace_box_user | default('dt_training') }}"

- name: Copy optimized startup script
  ansible.builtin.copy:
    src: "{{ role_path }}/../../start-server-ace-optimized.sh"
    dest: "{{ bizobs_app_dir }}/start-server.sh"
    mode: '0755'
    force: yes

- name: Start application
  ansible.builtin.shell: /bin/sh ./start-server.sh
  become: true
  args:
    chdir: "{{ bizobs_app_dir }}"
  async: 30
  poll: 0

- name: Wait for startup
  ansible.builtin.wait_for:
    port: 8080
    host: localhost
    delay: 5
    timeout: 30

- name: Verify application health
  ansible.builtin.uri:
    url: "http://localhost:8080/health"
    method: GET
    status_code: 200
  register: health_check
  retries: 3
  delay: 5

- name: Verify admin services status
  ansible.builtin.uri:
    url: "http://localhost:8080/api/admin/services/status"
    method: GET
    status_code: 200
  register: admin_status
  retries: 2
  delay: 3
  failed_when: false

# Deploy collaboration tools AFTER app is verified working
- include_role:
    name: "mattermost"

- name: Configure Dashboard with BizObs links
  block:
    - set_fact:
        include_dashboard_value_file: "{{ role_path }}/templates/bizobs-dashboard.yml.j2"

    - include_role:
        name: dashboard
        tasks_from: template-values-file

    - include_role:
        name: "dashboard"

# External access for BizObs application
- name: Create BizObs Kubernetes service
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: bizobs-service
        namespace: default
        labels:
          app: bizobs
          component: partner-powerup
      spec:
        type: ExternalName
        externalName: localhost
        ports:
        - port: 8080
          targetPort: 8080
          name: http

- name: Create BizObs ingress for external access
  kubernetes.core.k8s:
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: bizobs-ingress
        namespace: default
        labels:
          app: bizobs
          component: partner-powerup
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
      spec:
        ingressClassName: "{{ ingress_class | default('nginx') }}"
        rules:
        - host: "{{ bizobs_domain }}"
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: bizobs-service
                  port:
                    number: 8080

- debug:
    msg: |
      ✅ Partner PowerUp BizObs deployed successfully!
      
      🔗 Access URLs:
      - BizObs App: http://{{ bizobs_domain }}/
      - Dashboard: http://dashboard.{{ ingress_domain }}/
      - Mattermost: http://mattermost.{{ ingress_domain }}/
      
      🎯 BizObs Features Ready:
      - Customer Journey Simulation: http://{{ bizobs_domain }}/api/journey-simulation/simulate-journey
      - Admin Panel: http://{{ bizobs_domain }}/api/admin/services/status
      - Health Check: http://{{ bizobs_domain }}/health
      - Load Generation: Multi-persona simulation (Karen, Raj, Alex, Sophia)
      
      🎭 Demo Scenarios:
      - Insurance: PolicyDiscovery → QuoteGeneration → PaymentProcessing
      - Retail: ProductBrowsing → CartManagement → CheckoutProcess
      - Tech: UserOnboarding → FeatureExploration → DataProcessing
      - Banking: AccountCreation → KYCVerification → TransactionProcessing
      
      🚀 Ready for Dynatrace Business Observability demos!
